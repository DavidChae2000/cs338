import math


nhex = '00ea51e8e46b58fd1950721b0c38de73b2e712b5862d781cc1dae4df90d603c6a489a61d57929110a63fbc2caa6d016e928aff26e4973c203a35483008c1b1395fccdf488938c8e2fbfbec220e3e1647baa5657c4e5207b74bbc2b3c338116d827c0d0d01f4422da7e52fc4f6da09c4fcb6155cf9af77b8b7f31c841495f79d57b05e68408cd354017f358cdc1e6fdb786926008038bb8a46778fc08e964c7e47d2e57ee45f33f97b6599a6ac48857acdcdd160fb0bcdab00e55d6d27c45e8faa5fa84a71227adcbdce207e402a0a9cbd39eee104159861c186e3e2511a27f8b56a5a5b65b82ac95cdef1465b155f2b7484f948264c44f72aa43664ef0b3129fcbeb1cf7c2837e505d530c9cec59603de5367393775f877ed20506e2d65d3c00c0aa52d2ea8808fcb9c521b338413f644d4077e931e0fa4ba171d60fe6d1c15b89a527651ac4c244a1218fc538e875cf3a2fd528dfc991a583dd4d72d7dee66bbc5d766c0c6be69a813635a2a2bba5b74506556d9df7737f241f53f6f97c0e09fd'
ehex = '010001'
dhex = '7beefcd62bacf2993c024e2a05be2ac5ba101c30aec5f3b7d8b5eb4568dcb0690060faee0198768ce7f2f850dfbcbd26071c730ebeaacf84d9ffa7604a4a1945814fabc6e060e8254d1694e0a1981932301ee0437081a2420d7174b2ed190f14df97d22c675663e822ae4eb8761596e2c445a5bb9a201f2514488db768274171832a6c35578c4dad1d499ff269e151fb7c5a0c830b988a642c0a6a103ffcb5ee3bdfc827f9436e53c54ab623e2d53499d0d9c54cbe66906dd49afdd33b0ac1de9aebec71cd1b5921db418d1e668c2ba0e18def0f3063084852d62139cee6d5bfb07e65b1bd106469d25aae014b08e76f53015790de2ba68700782b467ffc4c8552cdb96cc343576d602a518005cfca1bb3618fbe707c80defcd3660ff91807486beb1b4ac162568e6f098b590d67c404f68437b3b33ab4c2e90a4536c1660249227c7d1f9cdc21614a94f41de0ac1355097e6ed1c4cfad4c5e61552685fec0a58b65ae8d54baacaa1d270209e13b2336fa2e5cbd3da87aafa7e62236f5c51345'
phex = '00f7835d5a710b1eed86f2946b3305312acf096fb415f0d2ceaa0f1c64be3d08a7cb002c29bd16d70a21dcac4a960d630014aac7d4bfa894a914a4d98a1288d7ed6b8a2a7183564b88d441515a42adc0f4174c83fe8666320c983bf2b6ec715d35ec3674911d40498eb9a399d05e787a378766a937e812480063ee7136ff92763075c8c98bd6ffda1aa1cfc946259163e762af74d9753989f8473510f4e1a7b9340a346e690317b0d21ec30c77bc407006914ef14d39656e171d978ded3968889b'
qhex = '00f25abcb7b95fd41b099ca7254fc5b07d82995050e294eb61550f489a932d9cc591dce820d6c14933d8e2057c65597243e25f380449d59aae91d27813ac227fe6b74430aeee2df39de5e7662b9b49e3a783e51410d68239231e4c41d13c48085f17ebb461fe744ccd045bc2fe049c60f652da273a856af8db4ded6c4439de569c1931a9baea9222d144e10ee684931b21c927db816cb2aaa12d1b4d95d53a92547abb26094dbbbcc8450f14eca223dccfeabefcf8d0fa7879933e9f160db16547'
ex1hex = '00cb725a10962caaee58e71a22075cf42e18e1cbc47de8668ee2efeac9d02940ed130a80428a9fb4802a9745b3452599c39e39466a546390566e96960d4cf0d873d9da46cae946cc6d9af25999548797bbcb4ee48c1912f57eaebf4fe115f694c456f5e7d8c3ef6cc6f946458f25a7e7e5aed12eb4ba781460e5c33fa2126ee3e12f5fac72da75916424af33e509ca39111f67d3274f98cd149c0b3d75dbe9ce6cbd1a9dca897536ad7005a940de27252df0d0afbd67393d4598d8531bb3fd7d93'
ex2hex = '684d2ebcef35d3c6131bed3f7c967aff792e5c47834c4e04e4a3a03e8e2aea3689310661e3aae9c33b8b028b67ded7f369404b8e64ec5e16d5413c565315c1efdc5da78a118d8b342056b73cfb2710a7ee76af6d13b495bc8c748b3aee739dceb72fc4c10bcea7a2f04641a42afdd6290cbd4076ca26a09559735dcdfb0dba3e920532a3f40212a3f7bdd838d343b040991ee3344f409178ae3dfae50a109c1b697a93c31b4639d803089b9bbfa82986fde356620b2650a519feb05ec063e14f'
cohex = '00cba2482285fda2b94a962a77cd1eeea438768deceb35ead3f60378ee6166eec72022edce41a1dd8c403bfb8ab73022a3a0b3fc5e8d49319e65cfd671e876db39546948d8cf0881b28339f1b97800300c2cc54a312a418fd89a188e2cab258b27026a46fdfb16c97c044775a8150d80ab49e9b13d4d1efe9a46e02c66c41a974918598043c870514f6fb2cfd06df71ba260a33b9d45d9684ef0023bf28a3aae47a30c015c410dd373f0dc0c532468f6201cddc833cbceeef2b0c5c089e6200e5e'

n = int(nhex, 16)
e = int(ehex, 16)
d = int(dhex, 16)
p = int(phex, 16)
q = int(qhex, 16)
ex1 = int(ex1hex, 16)
ex2 = int(ex2hex, 16)
co = int(cohex, 16)

# l = int(((p-1)*(q-1))/math.gcd(p-1,q-1)) overflow error so I did this calculation on an online calculator
l = 2658802038852802029953426482625348287435299698020799104511769959716093662204460869464516234703249285615460032089620642000240815741563173471422341759203780293850144402988624465738583838504845051674579949752491489591345987662746959407647943898520794487070084120873506188599453531668545175875630399595146172605726319774185989968386305306734803851270662474575687560751546378104302752184786272121725602413957174425130772316019428842218936255662768586084351198080719032278130774603201306043076416136082159116158329775819589380272151469449360322748921108471486704577121632725026998046220539820847007341164573784011556299765764438683824504053318003992982465497771304090851010699197955634912225218978314424492334986869855621728812342902269728061573850702725417824331095067145085495012059559322101598116565390407523560035002445052000421321052608763333404586308438110315580823837332586879451363261029147994654156175496373854441735589390

sanity = 0

if p*q != n:
    sanity += 1
if math.gcd(e,l) != 1:
    sanity += 1
if e*d%l != 1:
    sanity += 1
if ex1 != d%(p-1):
    sanity += 1
if ex2 != d%(q-1):
    sanity += 1


print(sanity)



